[package]
name = "webgl"
version = "0.1.0"
authors = ["Antonio Caggiano <info@antoniocaggiano.eu>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies.web-sys]
version = "0.3"
features = [
    "console",
    "Window",
    "Document",
    "Performance",
    "HtmlCanvasElement",
    "WebGlRenderingContext",
    "WebGlShader",
    "WebGlProgram",
    "WebGlUniformLocation",
    "WebGlBuffer",
    "WebGlTexture",
    "KeyboardEvent",
    "MouseEvent",
    "WheelEvent",
    "DomRect",
    "Element",
    "WebGlFramebuffer",
    "WebGlRenderbuffer",
]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.68"
js-sys = "0.3.45"
nalgebra = "0.23.0"
rand = { version = "0.7", features = ["wasm-bindgen"] }
png = "0.16.7"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
